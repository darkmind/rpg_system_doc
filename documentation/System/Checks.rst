=================
Механика проверок
=================

В качестве источника случайных значений используется колода игральных карт, 54 карты.

**Проверки**

  Для всех проверок используется следующий алгоритм:

  Красный и черный джокеры не имеют своего цифрового значения и обозначают ошеломляющий успех или провал соответственно.

  По умолчанию вероятность успеха любой проверки 50%, это значит что игрок выбирает 1 случайную карту из колоды и если ее значение, указанное здесь :ref:`cards-label`, больше 26, то проверка считается успешной.

  Но такой подход не соответствует реальному миру - есть вещи которые сделать легко, есть вещи которые сделать практически невозможно. Поэтому дальше это соотношение модифицируется умениями и сложностью.

  Инициатор (делает действие, выполняет проверку умения, атакует), тянет карту, прибавляет значение Параметра, Навыка и все Бонусы (если они есть), отнимает Сложность и отнимает 26. Если значение больше нуля, то проверка успешна. Чем больше число, тем лучше результат.

  Таким образом, если модификатор игрока равен Сложности, то вероятность успеха опять таки 50%.

  Если значение вытянутой карты находится в диапазоне 1-5, т.е. Туз - Пятерка Пик, то это неуспех в любом случае, модификаторы игрока и Сложность не важны.

  Если у персонажа время относительно не ограниченно, а вероятность успеха не 100%, то персонаж может заявить что от берет автоматический успех. Это занимает в 20 раз больше времени (если время важно) и считается что у него было 19 провалов (если это тоже важно). Таким образом автоматический взлом замка займет вместо 5 минут, 1 час 40 минут. А попытка автоматически разминировать бомбу закончится взрывом.

  Для разных проверок используется разные сущности, например:

  Для рукопашного боя это *<Сила(Параметр) + Рукопашный бой(Навык)>*

  Для взлома замка (механического) *<Ловкость(Параметр) + Безопасность(Навык)>*

**Защита от действий противников**

  Для упрощения и ускорения игрового процесса проверку делает только Инициатор действия, цель защитных проверок не делает. Цель может только усложнять проверку своими параметрами.
